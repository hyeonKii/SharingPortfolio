@tailwind base;
@tailwind components;
@tailwind utilities;

body {
    /* 너비를 화면에 꽉차게 맞춘다 */
    width: 100%;
    /* 높이를 뷰포트에 맞게 적용한다 */
    height: 100vh;
    /* background-image가 컨테이너를 채우지 못해도 반복하지 않는다.
    컨테이너에 가운데로 설정  */
    background: url("background.jpg") no-repeat center;
    /* 사이즈가 container에 맞지 않아도 꽉 차도록 채운다 */
    background-size: cover;
}

/* 네비게이션 바 */
.menuToggle {
    position: fixed;
    top: 0;
    right: 0;

    /* display는 요소를 블록요소로 혹은 inline 요소로 취급할것인지 선택하는 것 */
    /* 또한 display는 레이아웃 모델을 지정하는 역할을 한다. 
    가령, flex 컨테이너로 지정했으면 flex 컨테이너 내의 아이템들을 배치하는 방법을
    제어할 수 있다.
    grid 컨테이너는 행과 열을 사용해서 요소를 배치하는 레이아웃으로 지정한 것이다. */
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    height: 100vh;
    min-height: 100vh;

    z-index: 1;
    overflow: hidden;

    -webkit-user-select: none;
    user-select: none;
}

/* 네비게이션 트리거 요소 */
.menuToggle input {
    position: absolute;
    display: flex;
    width: 35px;
    height: 25px;
    margin: 20px 15px;

    cursor: pointer;

    /* 보여지는 모습 사라지게 적용 */
    opacity: 0;

    /* 가장 상위 레이어에 위치 */
    z-index: 2;

    -webkit-touch-callout: none;
}

/* 네비게이션 반응 요소 */
.menuToggle span {
    /* 요소 화면 상에서의 위치 고정 */
    position: fixed;
    top: 20px;
    right: 15px;

    display: block;
    width: 30px;
    height: 4px;

    margin-bottom: 5px;

    /* 네비게이션 바 기본 컬러 설정 */
    background-color: rgb(67, 95, 199);

    border-radius: 3px;

    z-index: 1;

    transform-origin: 4px 0px;
    transition: transform 0.4s, background 0.5s, opacity 0.55s ease;
}

.menu {
    /* 슬라이딩 위해서 상대 위치로 설정 */
    position: relative;

    display: block;
    width: 15rem;
    height: 100%;
    padding: 50% 10%;


    background-color: rgb(255, 255, 255, 0.5);
    backdrop-filter: blur(50%);

    /* 리스트 스타일 제거 */
    list-style-type: none;
    -webkit-font-smoothing: antialiased;

    transform: translateX(100%);
    transition: transform 0.4s;
}

/* 네비게이션 바 왼쪽으로 슬라이드 */
.menuToggle input:checked ~ ul {
    transform: translateX(0%);
}

.menu li {
    padding: 10px 0;
    font-size: 22px;
    font-weight: 500;
}

.menuToggle a {
    text-decoration: none;
    color: #232323;

    transition: color 0.3s ease;
}

.menuToggle a:hover {
    color: #7396d3;
}

.menuToggle span:first-child {
    transform-origin: 0% 0%;
}

.menuToggle span:nth-last-child(2) {
    margin: 7px 0;
    transform-origin: 0% 100%;
}

.menuToggle span:nth-last-child(3) {
  margin: 14px 0;
  transform-origin: 0% 100%;
}

/* 네비게이션 바 1번째 요소 크로스 설정 */
.menuToggle input:checked ~ span {
    opacity: 1;
    transform: rotate(45deg) translate(3px, -1px);
    background: #232323;
}

/* 네비게이션 바 중간 요소 투명하게 설정 */
.menuToggle input:checked ~ span:nth-last-child(3) {
    opacity: 0;
    transform: rotate(0deg) scale(0.2, 0.2);
}

/* 네비게이션 바 3번째 요소 크로스 설정 */
.menuToggle input:checked ~ span:nth-last-child(2) {
    transform: rotate(-45deg) translate(-5px, 10px);
}
